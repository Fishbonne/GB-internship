DROP TABLE IF EXISTS person_page_rank;
DROP TABLE IF EXISTS keywords;
DROP TABLE IF EXISTS pages;
DROP TABLE IF EXISTS persons;
DROP TABLE IF EXISTS sites;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS users;


CREATE TABLE persons
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
  name VARCHAR(45) NOT NULL
);
CREATE UNIQUE INDEX persons_unique_name_idx ON persons (name);

CREATE TABLE sites
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
  name VARCHAR(2048) NOT NULL
);
CREATE UNIQUE INDEX sites_unique_name_idx ON sites (name);

CREATE TABLE keywords
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
  name VARCHAR(2048) NOT NULL,
  personId INTEGER NOT NULL
);
CREATE UNIQUE INDEX keywords_unique_name_idx ON keywords (name);

CREATE TABLE pages
(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
  url VARCHAR(2048) NOT NULL,
  foundDateTime DATETIME,
  lastScanDate DATETIME,
  siteId INTEGER NOT NULL
);
CREATE UNIQUE INDEX pages_unique_url_idx ON pages (url);

CREATE TABLE person_page_rank
(
  personId INTEGER NOT NULL,
  pageId INTEGER NOT NULL,
  rank INTEGER NOT NULL,
  PRIMARY KEY (personId,pageId)
);

CREATE TABLE users (
  username VARCHAR(45) NOT NULL ,
  password CHAR(60) NOT NULL ,
  PRIMARY KEY (username)
);


CREATE TABLE user_roles (
  user_role_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
  username varchar(45) NOT NULL,
  role varchar(45) NOT NULL
);
CREATE UNIQUE INDEX uni_username_role ON user_roles (role,username);

ALTER TABLE keywords
  ADD CONSTRAINT R_3 FOREIGN KEY (personId) REFERENCES persons (id) ON DELETE CASCADE;
--  ADD FOREIGN KEY (personId) REFERENCES persons (id)ON DELETE CASCADE;

ALTER TABLE pages
  ADD CONSTRAINT R_4 FOREIGN KEY (siteId) REFERENCES sites (id) ON DELETE CASCADE;
-- ADD FOREIGN KEY (siteId) REFERENCES sites (id)ON DELETE CASCADE;

ALTER TABLE person_page_rank
  ADD CONSTRAINT R_9 FOREIGN KEY (personId) REFERENCES persons (id) ON DELETE CASCADE;
-- ADD FOREIGN KEY (personId) REFERENCES persons (id)ON DELETE CASCADE;

ALTER TABLE person_page_rank
  ADD CONSTRAINT R_10 FOREIGN KEY (pageId) REFERENCES pages (id) ON DELETE CASCADE;
-- ADD FOREIGN KEY (pageId) REFERENCES pages (id)ON DELETE CASCADE;

ALTER TABLE user_roles
  ADD CONSTRAINT R_11 FOREIGN KEY (username) REFERENCES users (username) ON DELETE CASCADE;
-- ADD FOREIGN KEY (username) REFERENCES users (username)ON DELETE CASCADE;